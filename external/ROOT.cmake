include_guard(GLOBAL)

include(CPM)
cpm()

if(NOT DEFINED USE_SYSTEM_ROOT)
  set(USE_SYSTEM_ROOT OFF)
endif()

if(NOT DEFINED ROOT_VERSION)
  set(ROOT_VERSION "6.24.02")
endif()

if(USE_SYSTEM_ROOT)
  find_package(ROOT ${ROOT_VERSION} CONFIG)
  if(NOT ROOT_FOUND)
    set(COMPILE_ROOT TRUE)
  else()
    set(COMPILE_ROOT FALSE)
    include("${ROOT_USE_FILE}")
  endif()
else()
  set(COMPILE_ROOT TRUE)
endif()

if(COMPILE_ROOT)

  if(NOT DEFINED ROOT_REPOSITORY)
    set(ROOT_REPOSITORY "https://github.com/external-packages/root.git")
  endif()

  if(NOT DEFINED ROOT_TAG)
    set(ROOT_TAG "FetchContent")
  endif()

  #Some tricks
  ##FIXME when cpm will accept list as option
  include(Zlib-ng)
  include(OpenSSL)
  declare_option(REPOSITORY ROOT OPTION builtin_zlib VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION builtin_openssl VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION arrow VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION alien VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION arrow VALUE OFF)
  #OPTIONS
  declare_option(REPOSITORY ROOT OPTION asimage VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION builtin_afterimage VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_cfitsio VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_clang VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_cling VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_davix VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_fftw3 VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_freetype VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_ftgl VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_gl2ps VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_glew VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_gsl VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION builtin_llvm VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_lz4 VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_lzma VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_nlohmannjson VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_openui5 VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_pcre VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_tbb VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_unuran VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_vc VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION builtin_vdt VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_veccore VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION builtin_xrootd VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_xxhash VALUE ON)
  declare_option(REPOSITORY ROOT OPTION builtin_zstd VALUE ON)
  declare_option(REPOSITORY ROOT OPTION ccache VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION cefweb VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION clad VALUE OFF)
  if(APPLE)
    declare_option(REPOSITORY ROOT OPTION cocoa VALUE ON)
  endif()
  declare_option(REPOSITORY ROOT OPTION coverage VALUE OFF)
  include(CheckLanguage)
  check_language(CUDA)
  if(CMAKE_CUDA_COMPILER)
    enable_language(CUDA)
    declare_option(REPOSITORY ROOT OPTION cuda VALUE ON)
    declare_option(REPOSITORY ROOT OPTION cudnn VALUE ON)
  else()
    declare_option(REPOSITORY ROOT OPTION cuda VALUE OFF)
    declare_option(REPOSITORY ROOT OPTION cudnn VALUE OFF)
  endif()
  declare_option(REPOSITORY ROOT OPTION cxxmodules VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION dataframe VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION davix VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION dcache VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION dev VALUE ON)
  declare_option(REPOSITORY ROOT OPTION distcc VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION exceptions VALUE ON)
  declare_option(REPOSITORY ROOT OPTION fcgi VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION fftw3 VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION fitsio VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION fortran VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION gdml VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION gfal VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION gnuinstall VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION gsl_shared VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION gviz VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION http VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION imt VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION jemalloc VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION libcxx VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION macos_native VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION mathmore VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION memory_termination VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION memstat VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION minuit2 VALUE ON)
  declare_option(REPOSITORY ROOT OPTION mlp VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION monalisa VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION mpi VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION mysql VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION odbc VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION opengl VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION oracle VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION pgsql VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION pyroot_legacy VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION pyroot VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION pythia6_nolink VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION pythia6 VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION pythia8 VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION qt5web VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION r VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION roofit VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION root7 VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION rpath VALUE ON)
  declare_option(REPOSITORY ROOT OPTION runtime_cxxmodules VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION shadowpw VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION shared VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION soversion VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION spectrum VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION sqlite VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION ssl VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION tcmalloc VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION test_distrdf_pyspark VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION tmva-cpu VALUE OFF)
  if(CMAKE_CUDA_COMPILER)
    declare_option(REPOSITORY ROOT OPTION tmva-gpu VALUE ON)
  else()
    declare_option(REPOSITORY ROOT OPTION tmva-gpu VALUE OFF)
  endif()
  declare_option(REPOSITORY ROOT OPTION tmva VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION tmva-pymva VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION tmva-rmva VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION unuran VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION uring VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION vc VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION vdt VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION veccore VALUE ON)
  declare_option(REPOSITORY ROOT OPTION vecgeom VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION vmc VALUE OFF)
  if(CMAKE_CXX_STANDARD STREQUAL "14" OR CMAKE_CXX_STANDARD STREQUAL "17" OR CMAKE_CXX_STANDARD STREQUAL "20" OR CMAKE_CXX_STANDARD STREQUAL "23")
    declare_option(REPOSITORY ROOT OPTION webgui VALUE OFF)
  else()
    declare_option(REPOSITORY ROOT OPTION webgui VALUE OFF)
  endif()
  declare_option(REPOSITORY ROOT OPTION win_broken_tests VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION winrtdebug VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION x11 VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION xml VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION xproofd VALUE OFF)
  declare_option(REPOSITORY ROOT OPTION xrootd VALUE OFF)
  if(NOT CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    declare_option(REPOSITORY ROOT OPTION CMAKE_POSITION_INDEPENDENT_CODE VALUE ON)
  endif()
  ##Needed for clib
  declare_option(REPOSITORY ROOT OPTION CMAKE_C_EXTENSIONS VALUE ON)
  declare_option(REPOSITORY ROOT OPTION CMAKE_CXX_EXTENSIONS VALUE ON)
  if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR CMAKE_C_COMPILER_ID STREQUAL "GNU")
    declare_option(REPOSITORY ROOT OPTION CMAKE_C_FLAGS VALUE "-Wno-error=class-memaccess")
    declare_option(REPOSITORY ROOT OPTION CMAKE_CXX_FLAGS VALUE "-Wno-error=class-memaccess")
  endif()
  declare_option(REPOSITORY ROOT OPTION unset_variables VALUE FALSE)
  print_options(REPOSITORY  ROOT)

  CPMAddPackage(NAME ROOT
               GIT_REPOSITORY ${ROOT_REPOSITORY}
               GIT_TAG ${ROOT_TAG}
               FETCHCONTENT_UPDATES_DISCONNECTED ${IS_OFFLINE}
               OPTIONS ${ROOT_OPTIONS} "ROOT_BUILTINS ZLIB|OpenSSL|ll")
endif()
